using System;using HECSFramework.Core;using Newtonsoft.Json;using HECSFramework.Serialize;using Components;namespace HECSFramework.Serialize{	[JsonObject, Serializable]	public partial struct SoftValueCounterComponentJSONResolver : IJSONResolver<SoftValueCounterComponent,SoftValueCounterComponentJSONResolver>	{		[JsonProperty("value")]		public int value;		public SoftValueCounterComponentJSONResolver In(ref SoftValueCounterComponent softvaluecountercomponent)		{			softvaluecountercomponent.SaveToJSONResolver(ref this);			return this;		}		public void Out(ref SoftValueCounterComponent softvaluecountercomponent)		{			softvaluecountercomponent.LoadFromJSONResolver(ref this);		}	}}namespace Components{	public partial class SoftValueCounterComponent : ISaveJSONToResolver<SoftValueCounterComponentJSONResolver>, ILoadFromJSONResolver<SoftValueCounterComponentJSONResolver>	{		public void SaveToJSONResolver(ref SoftValueCounterComponentJSONResolver resolver)		{			resolver.value = value;		}		public void LoadFromJSONResolver(ref SoftValueCounterComponentJSONResolver resolver)		{			value = resolver.value;		}	}}