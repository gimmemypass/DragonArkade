using Components;using System;using MessagePack;using HECSFramework.Serialize;using Commands;using HECSFramework.Core;namespace HECSFramework.Core{	[MessagePackObject, Serializable]	public partial struct SoftValueCounterComponentResolver : IResolver<SoftValueCounterComponent>, IResolver<SoftValueCounterComponentResolver,SoftValueCounterComponent>, IData	{		[Key(0)]		public int value;		public SoftValueCounterComponentResolver In(ref SoftValueCounterComponent softvaluecountercomponent)		{			softvaluecountercomponent.Save(ref this);			return this;		}		public void Out(ref Entity entity)		{			var local = entity.GetComponent<SoftValueCounterComponent>();			Out(ref local);		}		public void Out(ref SoftValueCounterComponent softvaluecountercomponent)		{			softvaluecountercomponent.Load(ref this);		}	}}namespace Components{	public partial class SoftValueCounterComponent : ISaveToResolver<SoftValueCounterComponentResolver>, ILoadFromResolver<SoftValueCounterComponentResolver>	{		public void Save(ref SoftValueCounterComponentResolver resolver)		{			resolver.value = value;		}		public void Load(ref SoftValueCounterComponentResolver resolver)		{			value = resolver.value;		}	}}