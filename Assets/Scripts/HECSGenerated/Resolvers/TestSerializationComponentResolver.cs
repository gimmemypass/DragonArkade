using Components;using System;using MessagePack;using HECSFramework.Serialize;using Commands;using HECSFramework.Core;using System.Collections.Generic;namespace HECSFramework.Core{	[MessagePackObject, Serializable]	public partial struct TestSerializationComponentResolver : IResolver<TestSerializationComponent>, IResolver<TestSerializationComponentResolver,TestSerializationComponent>, IData	{		[Key(0)]		public int privateField;		[Key(3)]		public CheckResolver privatePartialCheck;		[Key(1)]		public int[] Array;		[Key(2)]		public List<int> Collection;		[Key(4)]		public int partialCheck;		[Key(5)]		public CheckResolver publicResolverCheck;		public TestSerializationComponentResolver In(ref TestSerializationComponent testserializationcomponent)		{			testserializationcomponent.BeforeSync();			testserializationcomponent.Save(ref this);			this.Array = testserializationcomponent.Array;			this.Collection = testserializationcomponent.Collection;			this.partialCheck = testserializationcomponent.partialCheck;			this.publicResolverCheck = new CheckResolver().In(ref testserializationcomponent.publicResolverCheck);			return this;		}		public void Out(ref Entity entity)		{			var local = entity.GetComponent<TestSerializationComponent>();			Out(ref local);		}		public void Out(ref TestSerializationComponent testserializationcomponent)		{			testserializationcomponent.Load(ref this);			testserializationcomponent.Array = this.Array;			testserializationcomponent.Collection = this.Collection;			testserializationcomponent.partialCheck = this.partialCheck;			this.publicResolverCheck.Out(ref testserializationcomponent.publicResolverCheck);			testserializationcomponent.AfterSync();		}	}}namespace Components{	public partial class TestSerializationComponent : ISaveToResolver<TestSerializationComponentResolver>, ILoadFromResolver<TestSerializationComponentResolver>	{		public void Save(ref TestSerializationComponentResolver resolver)		{			resolver.privateField = privateField;			resolver.privatePartialCheck = new CheckResolver().In(ref privatePartialCheck);		}		public void Load(ref TestSerializationComponentResolver resolver)		{			privateField = resolver.privateField;			resolver.privatePartialCheck.Out(ref privatePartialCheck);		}	}}