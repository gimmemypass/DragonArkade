using Components;using HECSFramework.Serialize;using System;using HECSFramework.Serialize;using System.Collections.Generic;namespace HECSFramework.Core{	public partial class ResolversMap	{		private Dictionary<Type,JSONSerializationProvider> GetTypeToJSONResolver()		{			return new Dictionary<Type,JSONSerializationProvider>			{				{ typeof(PlayerLevelComponent), new JSONResolverProvider<PlayerLevelComponent,PlayerLevelComponentJSONResolver>() },				{ typeof(PlayerUpgradeComponent), new JSONResolverProvider<PlayerUpgradeComponent,PlayerUpgradeComponentJSONResolver>() },				{ typeof(SoftValueCounterComponent), new JSONResolverProvider<SoftValueCounterComponent,SoftValueCounterComponentJSONResolver>() },				{ typeof(SoundVolumeComponent), new JSONResolverProvider<SoundVolumeComponent,SoundVolumeComponentJSONResolver>() },				{ typeof(JSONTestSerialize), new JSONResolverProvider<JSONTestSerialize,JSONTestSerializeJSONResolver>() },				{ typeof(CheckThrowResolver), new JSONResolverProvider<CheckThrowResolver,CheckThrowResolverJSONResolver>() },			};		}		private Dictionary<int,JSONSerializationProvider> GetTypeCodeToJSONResolver()		{			return new Dictionary<int,JSONSerializationProvider>			{				{ 1534411424, new JSONResolverProvider<PlayerLevelComponent,PlayerLevelComponentJSONResolver>() },				{ -1002177873, new JSONResolverProvider<PlayerUpgradeComponent,PlayerUpgradeComponentJSONResolver>() },				{ -2019244546, new JSONResolverProvider<SoftValueCounterComponent,SoftValueCounterComponentJSONResolver>() },				{ 1587816967, new JSONResolverProvider<SoundVolumeComponent,SoundVolumeComponentJSONResolver>() },				{ -1515979799, new JSONResolverProvider<JSONTestSerialize,JSONTestSerializeJSONResolver>() },				{ 871826112, new JSONResolverProvider<CheckThrowResolver,CheckThrowResolverJSONResolver>() },			};		}		private Dictionary<int,Type> GetTypeIndexToTypeJSON()		{			return new Dictionary<int,Type>			{				{ 1534411424, typeof(PlayerLevelComponent) },				{ -1002177873, typeof(PlayerUpgradeComponent) },				{ -2019244546, typeof(SoftValueCounterComponent) },				{ 1587816967, typeof(SoundVolumeComponent) },				{ -1515979799, typeof(JSONTestSerialize) },				{ 871826112, typeof(CheckThrowResolver) },			};		}		private Dictionary<Type,int> GetTypeToIndexJSON()		{			return new Dictionary<Type,int>			{				{ typeof(PlayerLevelComponent), 1534411424 },				{ typeof(PlayerUpgradeComponent), -1002177873 },				{ typeof(SoftValueCounterComponent), -2019244546 },				{ typeof(SoundVolumeComponent), 1587816967 },				{ typeof(JSONTestSerialize), -1515979799 },				{ typeof(CheckThrowResolver), 871826112 },			};		}		partial void JSONModuleInit()		{			typeToJSONResolver = GetTypeToJSONResolver();			typeCodeToJSONResolver = GetTypeCodeToJSONResolver();			getTypeIndexToTypeJSON = GetTypeIndexToTypeJSON();			typeToIndexJSON = GetTypeToIndexJSON();		}	}}