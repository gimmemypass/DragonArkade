using System;using HECSFramework.Serialize;namespace Commands{	[Serializable]	public struct SetFly_dragonAnimatorState : ISetAnimatorState	{		public FloatId HorizontalSpeed;		public FloatId VerticalSpeed;		public IntId AttackBlend;		public BoolId Wings;		public void SetState(AnimatorState animatorState)		{			animatorState.SetFloat(HorizontalSpeed.Id, HorizontalSpeed.Value);			animatorState.SetFloat(VerticalSpeed.Id, VerticalSpeed.Value);			animatorState.SetInt(AttackBlend.Id, AttackBlend.Value);			animatorState.SetBool(Wings.Id, Wings.Value);		}	}	[Serializable]	public struct SetDragonAnimatorControllerAnimatorState : ISetAnimatorState	{		public FloatId AppearBlend;		public FloatId AttackBlend;		public FloatId IdleBlend;		public void SetState(AnimatorState animatorState)		{			animatorState.SetFloat(AppearBlend.Id, AppearBlend.Value);			animatorState.SetFloat(AttackBlend.Id, AttackBlend.Value);			animatorState.SetFloat(IdleBlend.Id, IdleBlend.Value);		}	}	[Serializable]	public struct SetTargetAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct SetTarget2AnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct SetPegasusAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct SetSpearman_anim_controllerAnimatorState : ISetAnimatorState	{		public FloatId Blend;		public void SetState(AnimatorState animatorState)		{			animatorState.SetFloat(Blend.Id, Blend.Value);		}	}	[Serializable]	public struct Setsample_archerAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct Setsample_casterAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct Setsample_cavalryAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct Setsample_cavalry_casterAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct Setsample_cavalry_spearAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct Setsample_crossbowAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct Setsample_infantryAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct Setsample_mounted_archerAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct Setsample_polearmAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct Setsample_settlerAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct Setsample_spearmanAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct Setsample_two_handedAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}	[Serializable]	public struct SetTestControllerAnimatorState : ISetAnimatorState	{		public void SetState(AnimatorState animatorState)		{		}	}}