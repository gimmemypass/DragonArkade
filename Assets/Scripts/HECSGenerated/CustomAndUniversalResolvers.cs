using System;using System.Collections.Generic;using Commands;using Components;using MessagePack;using HECSFramework.Serialize;using Strategies;namespace HECSFramework.Core{	[MessagePackObject, Serializable]	public partial struct IsHaveComponentNodeResolver : IResolver<IsHaveComponentNodeResolver,IsHaveComponentNode>, IData	{		[Key(0)]		public int ComponentMask;		public IsHaveComponentNodeResolver In(ref IsHaveComponentNode ishavecomponentnode)		{			this.ComponentMask = ishavecomponentnode.ComponentMask;			return this;		}		public void Out(ref IsHaveComponentNode ishavecomponentnode)		{			ishavecomponentnode.ComponentMask = this.ComponentMask;		}	}	[MessagePackObject, Serializable]	public partial struct IsHaveWorldSingleComponentNodeResolver : IResolver<IsHaveWorldSingleComponentNodeResolver,IsHaveWorldSingleComponentNode>, IData	{		[Key(0)]		public int ComponentMask;		public IsHaveWorldSingleComponentNodeResolver In(ref IsHaveWorldSingleComponentNode ishaveworldsinglecomponentnode)		{			this.ComponentMask = ishaveworldsinglecomponentnode.ComponentMask;			return this;		}		public void Out(ref IsHaveWorldSingleComponentNode ishaveworldsinglecomponentnode)		{			ishaveworldsinglecomponentnode.ComponentMask = this.ComponentMask;		}	}	public partial class ResolversMap	{		partial void InitCustomResolvers()		{			typeToCustomResolver = GetTypeToCustomResolver();			typeCodeToCustomResolver = GetTypeCodeToCustomResolver();			getTypeIndexToType = GetTypeIndexToType();		}		private Dictionary<Type,CustomResolverProviderBase> GetTypeToCustomResolver()		{			return new Dictionary<Type,CustomResolverProviderBase>			{				{ typeof(IsHaveComponentNode), new CustomResolverProvider<IsHaveComponentNode, IsHaveComponentNodeResolver>() },				{ typeof(IsHaveWorldSingleComponentNode), new CustomResolverProvider<IsHaveWorldSingleComponentNode, IsHaveWorldSingleComponentNodeResolver>() },				{ typeof(StartDecision), new CustomResolverProvider<StartDecision, StartDecisionResolver>() },				{ typeof(ExitStateNode), new CustomResolverProvider<ExitStateNode, ExitStateNodeResolver>() },				{ typeof(Strategy), new CustomResolverProvider<Strategy, StrategyResolver>() },				{ typeof(OneWayLogic), new CustomResolverProvider<OneWayLogic, OneWayLogicResolver>() },				{ typeof(OneWayLogicExitNode), new CustomResolverProvider<OneWayLogicExitNode, OneWayLogicExitNodeResolver>() },				{ typeof(DebugDecision), new CustomResolverProvider<DebugDecision, DebugDecisionResolver>() },				{ typeof(WaitNode), new CustomResolverProvider<WaitNode, WaitNodeResolver>() },				{ typeof(State), new CustomResolverProvider<State, StateResolver>() },				{ typeof(SetStateNode), new CustomResolverProvider<SetStateNode, SetStateNodeResolver>() },				{ typeof(RunOneWayLogicNode), new CustomResolverProvider<RunOneWayLogicNode, RunOneWayLogicNodeResolver>() },				{ typeof(CompleteFinalNode), new CustomResolverProvider<CompleteFinalNode, CompleteFinalNodeResolver>() },				{ typeof(UpdateStateNode), new CustomResolverProvider<UpdateStateNode, UpdateStateNodeResolver>() },				{ typeof(SetDefaultStrategyNode), new CustomResolverProvider<SetDefaultStrategyNode, SetDefaultStrategyNodeResolver>() },				{ typeof(ChangeStrategyDecision), new CustomResolverProvider<ChangeStrategyDecision, ChangeStrategyDecisionNodeResolver>() },				{ typeof(ChainEnd), new CustomResolverProvider<ChainEnd, ChainEndNodeResolver>() },			};		}		private Dictionary<int,CustomResolverProviderBase> GetTypeCodeToCustomResolver()		{			return new Dictionary<int,CustomResolverProviderBase>			{				{ -1717586605, new CustomResolverProvider<IsHaveComponentNode, IsHaveComponentNodeResolver>() },				{ 739353940, new CustomResolverProvider<IsHaveWorldSingleComponentNode, IsHaveWorldSingleComponentNodeResolver>() },				{ 862918478, new CustomResolverProvider<StartDecision, StartDecisionResolver>() },				{ 579672840, new CustomResolverProvider<ExitStateNode, ExitStateNodeResolver>() },				{ 1260301605, new CustomResolverProvider<Strategy, StrategyResolver>() },				{ -1349185861, new CustomResolverProvider<OneWayLogic, OneWayLogicResolver>() },				{ -2103439033, new CustomResolverProvider<OneWayLogicExitNode, OneWayLogicExitNodeResolver>() },				{ 841225799, new CustomResolverProvider<DebugDecision, DebugDecisionResolver>() },				{ 1144040195, new CustomResolverProvider<WaitNode, WaitNodeResolver>() },				{ 312210922, new CustomResolverProvider<State, StateResolver>() },				{ -470921285, new CustomResolverProvider<SetStateNode, SetStateNodeResolver>() },				{ -189784911, new CustomResolverProvider<RunOneWayLogicNode, RunOneWayLogicNodeResolver>() },				{ 2100598462, new CustomResolverProvider<CompleteFinalNode, CompleteFinalNodeResolver>() },				{ -1127887493, new CustomResolverProvider<UpdateStateNode, UpdateStateNodeResolver>() },				{ -1691911302, new CustomResolverProvider<SetDefaultStrategyNode, SetDefaultStrategyNodeResolver>() },				{ -1334252964, new CustomResolverProvider<ChangeStrategyDecision, ChangeStrategyDecisionNodeResolver>() },				{ 1097380175, new CustomResolverProvider<ChainEnd, ChainEndNodeResolver>() },			};		}		private Dictionary<int,Type> GetTypeIndexToType()		{			return new Dictionary<int,Type>			{				{ -1717586605, typeof(IsHaveComponentNode) },				{ 739353940, typeof(IsHaveWorldSingleComponentNode) },				{ 862918478, typeof(StartDecision) },				{ 579672840, typeof(ExitStateNode) },				{ 1260301605, typeof(Strategy) },				{ -1349185861, typeof(OneWayLogic) },				{ -2103439033, typeof(OneWayLogicExitNode) },				{ 841225799, typeof(DebugDecision) },				{ 1144040195, typeof(WaitNode) },				{ 312210922, typeof(State) },				{ -470921285, typeof(SetStateNode) },				{ -189784911, typeof(RunOneWayLogicNode) },				{ 2100598462, typeof(CompleteFinalNode) },				{ -1127887493, typeof(UpdateStateNode) },				{ -1691911302, typeof(SetDefaultStrategyNode) },				{ -1334252964, typeof(ChangeStrategyDecision) },				{ 1097380175, typeof(ChainEnd) },			};		}	}}