using HECSFramework.Serialize;using System.Collections.Generic;namespace HECSFramework.Unity{	public static partial class AnimatorManager	{		public static AnimatorHelper Fly_dragon;		public static AnimatorHelper DragonAnimatorController;		public static AnimatorHelper Target;		public static AnimatorHelper Target2;		public static AnimatorHelper Pegasus;		public static AnimatorHelper Spearman_anim_controller;		public static AnimatorHelper sample_archer;		public static AnimatorHelper sample_caster;		public static AnimatorHelper sample_cavalry;		public static AnimatorHelper sample_cavalry_caster;		public static AnimatorHelper sample_cavalry_spear;		public static AnimatorHelper sample_crossbow;		public static AnimatorHelper sample_infantry;		public static AnimatorHelper sample_mounted_archer;		public static AnimatorHelper sample_polearm;		public static AnimatorHelper sample_settler;		public static AnimatorHelper sample_spearman;		public static AnimatorHelper sample_two_handed;		public static AnimatorHelper TestController;		static AnimatorManager()		{			InitFly_dragon();			InitDragonAnimatorController();			InitTarget();			InitTarget2();			InitPegasus();			InitSpearman_anim_controller();			Initsample_archer();			Initsample_caster();			Initsample_cavalry();			Initsample_cavalry_caster();			Initsample_cavalry_spear();			Initsample_crossbow();			Initsample_infantry();			Initsample_mounted_archer();			Initsample_polearm();			Initsample_settler();			Initsample_spearman();			Initsample_two_handed();			InitTestController();		}		private static void InitFly_dragon()		{			var dictionaryFly_dragon = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{					{-1413060733, new BoolParameterResolver() },				},				IntStates = new Dictionary<int,IntParameterResolver>()				{					{1191075853, new IntParameterResolver() },				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{					{-1118621987, new FloatParameterResolver() },					{-1148172834, new FloatParameterResolver() },				},			};			animStateProviders.Add("Fly_dragon", resolver);			Fly_dragon = new AnimatorHelper(dictionaryFly_dragon);			animhelpers.Add("Fly_dragon", Fly_dragon);		}		private static void InitDragonAnimatorController()		{			var dictionaryDragonAnimatorController = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{					{636870139, new FloatParameterResolver() },					{1191075853, new FloatParameterResolver() },					{2026381050, new FloatParameterResolver() },				},			};			animStateProviders.Add("DragonAnimatorController", resolver);			DragonAnimatorController = new AnimatorHelper(dictionaryDragonAnimatorController);			animhelpers.Add("DragonAnimatorController", DragonAnimatorController);		}		private static void InitTarget()		{			var dictionaryTarget = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("Target", resolver);			Target = new AnimatorHelper(dictionaryTarget);			animhelpers.Add("Target", Target);		}		private static void InitTarget2()		{			var dictionaryTarget2 = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("Target2", resolver);			Target2 = new AnimatorHelper(dictionaryTarget2);			animhelpers.Add("Target2", Target2);		}		private static void InitPegasus()		{			var dictionaryPegasus = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("Pegasus", resolver);			Pegasus = new AnimatorHelper(dictionaryPegasus);			animhelpers.Add("Pegasus", Pegasus);		}		private static void InitSpearman_anim_controller()		{			var dictionarySpearman_anim_controller = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{					{1784438316, new FloatParameterResolver() },				},			};			animStateProviders.Add("Spearman_anim_controller", resolver);			Spearman_anim_controller = new AnimatorHelper(dictionarySpearman_anim_controller);			animhelpers.Add("Spearman_anim_controller", Spearman_anim_controller);		}		private static void Initsample_archer()		{			var dictionarysample_archer = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("sample_archer", resolver);			sample_archer = new AnimatorHelper(dictionarysample_archer);			animhelpers.Add("sample_archer", sample_archer);		}		private static void Initsample_caster()		{			var dictionarysample_caster = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("sample_caster", resolver);			sample_caster = new AnimatorHelper(dictionarysample_caster);			animhelpers.Add("sample_caster", sample_caster);		}		private static void Initsample_cavalry()		{			var dictionarysample_cavalry = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("sample_cavalry", resolver);			sample_cavalry = new AnimatorHelper(dictionarysample_cavalry);			animhelpers.Add("sample_cavalry", sample_cavalry);		}		private static void Initsample_cavalry_caster()		{			var dictionarysample_cavalry_caster = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("sample_cavalry_caster", resolver);			sample_cavalry_caster = new AnimatorHelper(dictionarysample_cavalry_caster);			animhelpers.Add("sample_cavalry_caster", sample_cavalry_caster);		}		private static void Initsample_cavalry_spear()		{			var dictionarysample_cavalry_spear = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("sample_cavalry_spear", resolver);			sample_cavalry_spear = new AnimatorHelper(dictionarysample_cavalry_spear);			animhelpers.Add("sample_cavalry_spear", sample_cavalry_spear);		}		private static void Initsample_crossbow()		{			var dictionarysample_crossbow = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("sample_crossbow", resolver);			sample_crossbow = new AnimatorHelper(dictionarysample_crossbow);			animhelpers.Add("sample_crossbow", sample_crossbow);		}		private static void Initsample_infantry()		{			var dictionarysample_infantry = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("sample_infantry", resolver);			sample_infantry = new AnimatorHelper(dictionarysample_infantry);			animhelpers.Add("sample_infantry", sample_infantry);		}		private static void Initsample_mounted_archer()		{			var dictionarysample_mounted_archer = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("sample_mounted_archer", resolver);			sample_mounted_archer = new AnimatorHelper(dictionarysample_mounted_archer);			animhelpers.Add("sample_mounted_archer", sample_mounted_archer);		}		private static void Initsample_polearm()		{			var dictionarysample_polearm = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("sample_polearm", resolver);			sample_polearm = new AnimatorHelper(dictionarysample_polearm);			animhelpers.Add("sample_polearm", sample_polearm);		}		private static void Initsample_settler()		{			var dictionarysample_settler = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("sample_settler", resolver);			sample_settler = new AnimatorHelper(dictionarysample_settler);			animhelpers.Add("sample_settler", sample_settler);		}		private static void Initsample_spearman()		{			var dictionarysample_spearman = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("sample_spearman", resolver);			sample_spearman = new AnimatorHelper(dictionarysample_spearman);			animhelpers.Add("sample_spearman", sample_spearman);		}		private static void Initsample_two_handed()		{			var dictionarysample_two_handed = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("sample_two_handed", resolver);			sample_two_handed = new AnimatorHelper(dictionarysample_two_handed);			animhelpers.Add("sample_two_handed", sample_two_handed);		}		private static void InitTestController()		{			var dictionaryTestController = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("TestController", resolver);			TestController = new AnimatorHelper(dictionaryTestController);			animhelpers.Add("TestController", TestController);		}	}}